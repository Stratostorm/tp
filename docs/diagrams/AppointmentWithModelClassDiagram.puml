@startuml
!include style.puml
skinparam arrowThickness 1.1
skinparam arrowColor MODEL_COLOR
skinparam classBackgroundColor MODEL_COLOR

Package Model <<Rectangle>>{
Interface ReadOnlyAddressBook <<Interface>>
Interface Model <<Interface>>
Interface ObservableList <<Interface>>
Class AddressBook
Class ReadOnlyAddressBook
Class Model
Class ModelManager
Class UserPrefs
Class ReadOnlyUserPrefs

Package Person {
Class Person
Class UniquePersonList
}

Class HiddenOutside #FFFFFF
HiddenOutside ..> Model

AddressBook .up|> ReadOnlyAddressBook

ModelManager .up.|> Model
Model .right.> ObservableList
ModelManager o--> "1" AddressBook
ModelManager o-left-> "1" UserPrefs
UserPrefs .up.|> ReadOnlyUserPrefs

AddressBook *--> "1" UniquePersonList
UniquePersonList o--> "*" Person

ModelManager ->"filtered list ~*" Person

'changes added from here onwards
Class AppointmentBook
Interface ReadOnlyAppointmentBook <<Interface>>

AppointmentBook .up.|> ReadOnlyAppointmentBook
ModelManager o---> "1" AppointmentBook

Package Appointment {
Class Appointment
Class UniqueAppointmentList
}

AppointmentBook *--> "1" UniqueAppointmentList
UniqueAppointmentList o--> "*" Appointment

ModelManager ->"~* filtered list" Appointment
note "Possible design considerations for ModelManager:\n- 2 subclass, one for Person and one for Appointment\n- As an implementation of the Model interface,\n  ModelManager can handle both" as N1

@enduml